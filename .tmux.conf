# Some settings are copied from https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/

# Unbind all previous binds to start afresh
# unbind-key -a
# Realised that this is a bad idea, it disables all tmux defaults

# Set default scripting language
set-option -g default-shell /bin/bash
# This would then mean any run-shell bind would execute in bash. See below example where we only pane switch up if it exists
# bind Up run-shell "if [ $(tmux display-message -p '#{pane_at_top}') -ne 1 ]; then tmux select-pane -U; fi"

# Enable plugins
set -g @plugin 'tmux-plugins/tpm'

# --------------- MOUSE --------------- #
# Allow mouse selection of panes. set -g enables this setting when new tmux session launched, not just when resourced
set -g mouse on

# -------- SET DISPLAY OPTIONS -------- #
# Status bar
set -g status-position bottom                        # Status bar at the bottom of the screen rather than the top
set -g status-interval 2                             # Rewrite status bar every 2 seconds
set -g status-right-length 100                       # Increase right pane of status bar character limit to 100
set -g status-left-length 100                        # Increase left pane character limit to 30
set -g status-justify centre                         # Set list of tabs to be in the centre of the status bar, rather than the default left
set -g status-style 'fg=#ffffff,bg=#004040'          # Set status bar colour (bg) and default text colour (fg)
set -g @plugin 'soyuka/tmux-current-pane-hostname'   # Install plugin to be able to get hostname of current host
setw -g window-status-current-style 'bg=#121212,fg=#00ff00'  # Chosen window has different format in status bar
setw -g window-status-style 'bg=#121212,fg=#606060'          # Colour scheme for other (currently inactive) windows 

# Custom format / text for left and right parts of status bar
set -g status-right '[#{session_id}.#{window_id}.#{pane_id}] #{?client_prefix,#[bg=#800000] H #[default], H }#{?window_zoomed_flag,#[bg=#800000] Z #[default], Z } #[fg=#ffff00]|#[default]  %H:%M %a %e %b %Y'
set -g status-left '#H #(if [[ #H == $HOST ]]; then echo : #{pane_current_path}; fi)'

# Pane display settings including active panes
set -g pane-border-status top                            # Set pane header to be at the top of the pane
setw -g automatic-rename off                             # Set window naming to not be automatic
set -g pane-border-format '-'                            # Set pane title to just be - to join with border. Previously was #P (pane_id)
set -g pane-active-border-style 'fg=#00ff00,bg=#444444'  # For current active pane, have special border format to highlight it
set -g pane-border-style 'fg=#606060'                    # Dull colours for inactive pane
set -g window-active-style 'bg=#0f0f0f'                  # Slightly highlighted background for active pane

# set base indices to 1 instead of default 0
set -g base-index 1       # Start numbering windows at 1, not 0.
set -g pane-base-index 1  # Start numbering panes at 1, not 0.

# --------------- BINDS --------------- #
# remap prefix from 'C-b' to 'C-z'
unbind C-b
set -g prefix C-z
bind-key C-z send-prefix

# reload tmux config with r
bind r source-file ~/.tmux.conf

# split panes using arrows
bind Right split-window -h
bind Left split-window -h
bind Down split-window -v
bind Up split-window -v
unbind '"'
unbind %

# switch panes using Alt-arrow without prefix. Enable this to work in copy mode too
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind -T copy-mode-vi -n M-Left select-pane -L
bind -T copy-mode-vi -n M-Right select-pane -R
bind -T copy-mode-vi -n M-Up select-pane -U
bind -T copy-mode-vi -n M-Down select-pane -D

# Swapping panes
bind > swap-pane -D
bind < swap-pane -U

# Break pane into it's own new window, or join it back
bind b break-pane
bind j join-pane  # To select the pane to join to, right click on one (border should go bold). The terminology is "marking" the pane

# New tab binds, as well as modifying the rename window bind
bind , command-prompt "rename-window '%%'"                                                      # Edit existing bind for renaming window to not include current window name
bind -n C-t new-window -n 'quick'                                                               # Ctrl+t to create new window quickly with default title. 
bind t new-window \; command-prompt -p "Name for this new window: " "rename-window '%%'"        # Hot+t to create new windows, and show prompt to name it

# switch tabs using Ctrl+Shift+Arrows without prefix. Reorder windows with Alt+PgUp/PgDn
bind -n M-PgDn swap-window -t +1
bind -n M-PgUp swap-window -t -1
bind Tab last-window        # move to last active window
bind-key -n C-S-Left previous-window
bind-key -n C-S-Right next-window
bind -T copy-mode-vi -n C-S-Left previous-window
bind -T copy-mode-vi -n C-S-Right next-window

# Close panes or windows with Q or W with prefix
bind q killp
bind w killw

# Change binds to enter copy mode and paste from tmux clipboard ("buffer")
unbind [
unbind ]
bind v copy-mode
bind p paste-buffer

# Set copy-mode highlighting colour
set -g mode-style 'bg=#5fff00,fg=#5f0087'

# Enable end/home/ctrl+arrow keys to work in copy mode
bind -T copy-mode-vi C-Left send -X previous-word
bind -T copy-mode-vi C-Right send -X next-word
bind -T copy-mode-vi Home send -X start-of-line
bind -T copy-mode-vi End  send -X end-of-line

# Other copy mode binds too
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi C-Down send -X next-paragraph
bind -T copy-mode-vi C-Up send -X previous-paragraph
bind -T copy-mode-vi q send -X clear-selection
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi Space send -X rectangle-toggle
bind -T copy-mode-vi C-Home send -X history-top
bind -T copy-mode-vi C-End send -X history-bottom
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xsel -i --clipboard"

# Zoom in pane (for easier copying and viewing)
bind z resize-pane -Z

# Disables pane switching with the escape key and sets the escape key delay to 0
set -s escape-time 0

# -------- ENABLE COPY + PASTE -------- #
# To enable copy to OS clipboard with y
set -g @plugin 'tmux-plugins/tmux-yank'
bind -T copy-mode    C-c send -X copy-pipe-no-clear "xclip -in -selection clipboard"
bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xclip -in -selection clipboard"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

